["CREATE TABLE author (author_id INT,author_name VARCHAR(400),CONSTRAINT pk_author PRIMARY KEY (author_id));",
"CREATE TABLE publisher (publisher_id INT,publisher_name VARCHAR(400),CONSTRAINT pk_publisher PRIMARY KEY (publisher_id));",
"CREATE TABLE book_language (language_id INT,language_code VARCHAR(8),language_name VARCHAR(50),CONSTRAINT pk_book_language PRIMARY KEY (language_id));",
"CREATE TABLE book (book_id INT,title VARCHAR(400),isbn13 VARCHAR(13),language_id INT,num_pages INT,publication_date DATE,publisher_id INT,CONSTRAINT pk_book PRIMARY KEY (book_id),CONSTRAINT fk_book_lang FOREIGN KEY (language_id) REFERENCES book_language (language_id),CONSTRAINT fk_book_pub FOREIGN KEY (publisher_id) REFERENCES publisher (publisher_id));",
"CREATE TABLE book_author (book_id INT,author_id INT,CONSTRAINT pk_bookauthor PRIMARY KEY (book_id, author_id),CONSTRAINT fk_ba_book FOREIGN KEY (book_id) REFERENCES book (book_id),CONSTRAINT fk_ba_author FOREIGN KEY (author_id) REFERENCES author (author_id));",
"CREATE TABLE address_status (status_id INT,address_status VARCHAR(30),CONSTRAINT pk_addr_status PRIMARY KEY (status_id));",
"CREATE TABLE country (country_id INT,country_name VARCHAR(200),CONSTRAINT pk_country PRIMARY KEY (country_id));",
"CREATE TABLE address (address_id INT,street_number VARCHAR(10),street_name VARCHAR(200),city VARCHAR(100),country_id INT,CONSTRAINT pk_address PRIMARY KEY (address_id),CONSTRAINT fk_addr_ctry FOREIGN KEY (country_id) REFERENCES country (country_id));",
"CREATE TABLE customer (customer_id INT,first_name VARCHAR(200),last_name VARCHAR(200),email VARCHAR(350),CONSTRAINT pk_customer PRIMARY KEY (customer_id));",
"CREATE TABLE customer_address (customer_id INT,address_id INT,status_id INT,CONSTRAINT pk_custaddr PRIMARY KEY (customer_id, address_id),CONSTRAINT fk_ca_cust FOREIGN KEY (customer_id) REFERENCES customer (customer_id),CONSTRAINT fk_ca_addr FOREIGN KEY (address_id) REFERENCES address (address_id));",
"CREATE TABLE shipping_method (method_id INT,method_name VARCHAR(100),cost DECIMAL(6, 2),CONSTRAINT pk_shipmethod PRIMARY KEY (method_id));",
"CREATE TABLE cust_order (order_id SERIAL,order_date TIMESTAMP,customer_id INT,shipping_method_id INT,dest_address_id INT,CONSTRAINT pk_custorder PRIMARY KEY (order_id),CONSTRAINT fk_order_cust FOREIGN KEY (customer_id) REFERENCES customer (customer_id),CONSTRAINT fk_order_ship FOREIGN KEY (shipping_method_id) REFERENCES shipping_method (method_id),CONSTRAINT fk_order_addr FOREIGN KEY (dest_address_id) REFERENCES address (address_id));",
"CREATE TABLE order_status (status_id INT,status_value VARCHAR(20),CONSTRAINT pk_orderstatus PRIMARY KEY (status_id));",
"CREATE TABLE order_line (line_id SERIAL,order_id INT,book_id INT,price DECIMAL(5, 2),CONSTRAINT pk_orderline PRIMARY KEY (line_id),CONSTRAINT fk_ol_order FOREIGN KEY (order_id) REFERENCES cust_order (order_id),CONSTRAINT fk_ol_book FOREIGN KEY (book_id) REFERENCES book (book_id));",
"CREATE TABLE order_history (history_id SERIAL,order_id INT,status_id INT,status_date TIMESTAMP,CONSTRAINT pk_orderhist PRIMARY KEY (history_id),CONSTRAINT fk_oh_order FOREIGN KEY (order_id) REFERENCES cust_order (order_id),CONSTRAINT fk_oh_status FOREIGN KEY (status_id) REFERENCES order_status (status_id));",
"CREATE TABLE country_movie (country_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,country_iso_code varchar(10) DEFAULT NULL,country_name varchar(200) DEFAULT NULL,CONSTRAINT pk_country PRIMARY KEY (country_id));",
"CREATE TABLE gender_movie (gender_id INT NOT NULL,gender varchar(20) DEFAULT NULL,CONSTRAINT pk_gender PRIMARY KEY (gender_id));",
"CREATE TABLE genre_movies (genre_id INT NOT NULL,genre_name varchar(100) DEFAULT NULL,CONSTRAINT pk_genre PRIMARY KEY (genre_id));",
"CREATE TABLE language_movies (language_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,language_code varchar(10) DEFAULT NULL,language_name varchar(500) DEFAULT NULL,CONSTRAINT pk_language PRIMARY KEY (language_id));",
"CREATE TABLE language_role_movies (role_id INT NOT NULL,language_role varchar(20) DEFAULT NULL,CONSTRAINT pk_langrole PRIMARY KEY (role_id));",
"CREATE TABLE department_movies (department_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,department_name varchar(200) DEFAULT NULL,CONSTRAINT pk_department PRIMARY KEY (department_id));",
"CREATE TABLE keyword_movies (keyword_id INT NOT NULL,keyword_name varchar(100) DEFAULT NULL,CONSTRAINT pk_keyword PRIMARY KEY (keyword_id));",
"CREATE TABLE production_company_movies (company_id INT NOT NULL,company_name varchar(200) DEFAULT NULL,CONSTRAINT pk_prodcomp PRIMARY KEY (company_id));",
"CREATE TABLE movie_company_movies (movie_id INT DEFAULT NULL,company_id INT DEFAULT NULL,CONSTRAINT fk_mc_comp FOREIGN KEY (company_id)REFERENCES movies.production_company (company_id),CONSTRAINT fk_mc_movie FOREIGN KEY (movie_id) REFERENCES movies.movie (movie_id));",
"CREATE TABLE movie_genres_movies (movie_id INT DEFAULT NULL,genre_id INT DEFAULT NULL,CONSTRAINT fk_mg_genre FOREIGN KEY (genre_id) REFERENCES movies.genre (genre_id),CONSTRAINT fk_mg_movie FOREIGN KEY (movie_id) REFERENCES movies.movie (movie_id));",
"CREATE TABLE movie_keywords_movies (movie_id INT DEFAULT NULL,keyword_id INT DEFAULT NULL,CONSTRAINT fk_mk_keyword FOREIGN KEY (keyword_id) REFERENCES movies.keyword (keyword_id),CONSTRAINT fk_mk_movie FOREIGN KEY (movie_id) REFERENCES movies.movie (movie_id));",
"CREATE TABLE movie_languages_movies (movie_id INT DEFAULT NULL,language_id INT DEFAULT NULL,language_role_id INT DEFAULT NULL,CONSTRAINT fk_ml_lang FOREIGN KEY (language_id) REFERENCES movies.language (language_id),CONSTRAINT fk_ml_movie FOREIGN KEY (movie_id) REFERENCES movies.movie (movie_id),CONSTRAINT fk_ml_role FOREIGN KEY (language_role_id) REFERENCES movies.language_role (role_id));",
"CREATE TABLE production_country_movies (movie_id INT DEFAULT NULL,country_id INT DEFAULT NULL,CONSTRAINT fk_pc_country FOREIGN KEY (country_id) REFERENCES movies.country (country_id),CONSTRAINT fk_pc_movie FOREIGN KEY (movie_id) REFERENCES movies.movie (movie_id));",
"CREATE TABLE medal_olympics (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,medal_name VARCHAR(50) DEFAULT NULL,CONSTRAINT pk_medal PRIMARY KEY (id));",
"CREATE TABLE noc_region_olympics (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,noc VARCHAR(5) DEFAULT NULL,region_name VARCHAR(200) DEFAULT NULL,CONSTRAINT pk_nocregion PRIMARY KEY (id));",
"CREATE TABLE sport_olympics (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,sport_name VARCHAR(200) DEFAULT NULL,PRIMARY KEY (id));",
"CREATE TABLE city_olympics (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,city_name VARCHAR(200) DEFAULT NULL,PRIMARY KEY (id));",
"CREATE TABLE event_olympics (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,sport_id INT DEFAULT NULL,event_name VARCHAR(200) DEFAULT NULL,CONSTRAINT pk_event PRIMARY KEY (id),CONSTRAINT fk_ev_sp FOREIGN KEY (sport_id) REFERENCES olympics.sport (id));",
"CREATE TABLE games_olympics (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,games_year INT DEFAULT NULL,games_name VARCHAR(100) DEFAULT NULL,season VARCHAR(100) DEFAULT NULL,CONSTRAINT pk_games PRIMARY KEY (id));",
"CREATE TABLE games_city_olympics (games_id INT DEFAULT NULL,city_id INT DEFAULT NULL,CONSTRAINT fk_gci_city FOREIGN KEY (city_id) REFERENCES olympics.city (id),CONSTRAINT fk_gci_gam FOREIGN KEY (games_id) REFERENCES olympics.games (id));",
"CREATE TABLE alignment_superhero (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,alignment varchar(10) DEFAULT NULL,CONSTRAINT pk_alignment PRIMARY KEY (id));",
"CREATE TABLE attribute_superhero (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,attribute_name varchar(200) DEFAULT NULL,CONSTRAINT pk_attribute PRIMARY KEY (id));",
"CREATE TABLE colour_superhero (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,colour varchar(20) DEFAULT NULL,CONSTRAINT pk_colour PRIMARY KEY (id));",
"CREATE TABLE comic_superhero (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,comic_name varchar(200) DEFAULT NULL,issue INT DEFAULT NULL,publish_month INT DEFAULT NULL,publish_year INT DEFAULT NULL,CONSTRAINT pk_comic PRIMARY KEY (id));",
"CREATE TABLE gender_superhero (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,gender varchar(20) DEFAULT NULL,CONSTRAINT pk_gender PRIMARY KEY (id));",
"CREATE TABLE publisher_superhero (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,publisher_name varchar(50) DEFAULT NULL,CONSTRAINT pk_publisher PRIMARY KEY (id));",
"CREATE TABLE race_superhero (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,race varchar(100) DEFAULT NULL,CONSTRAINT pk_race PRIMARY KEY (id));",
"CREATE TABLE superhero_superhero (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,superhero_name varchar(200) DEFAULT NULL,full_name varchar(200) DEFAULT NULL,gender_id INT DEFAULT NULL,eye_colour_id INT DEFAULT NULL,hair_colour_id INT DEFAULT NULL,skin_colour_id INT DEFAULT NULL,race_id INT DEFAULT NULL,publisher_id INT DEFAULT NULL,alignment_id INT DEFAULT NULL,height_cm INT DEFAULT NULL,weight_kg INT DEFAULT NULL,CONSTRAINT pk_superhero PRIMARY KEY (id),CONSTRAINT fk_sup_align FOREIGN KEY(alignment_id) REFERENCES superhero.alignment (id),CONSTRAINT fk_sup_eyecol FOREIGN KEY (eye_colour_id) REFERENCES superhero.colour (id),CONSTRAINT fk_sup_gen FOREIGN KEY (gender_id) REFERENCES superhero.gender (id),CONSTRAINT fk_sup_haircol FOREIGN KEY (hair_colour_id) REFERENCES superhero.colour (id),CONSTRAINT fk_sup_pub FOREIGN KEY (publisher_id) REFERENCES superhero.publisher (id),CONSTRAINT fk_sup_race FOREIGN KEY (race_id) REFERENCES superhero.race (id),CONSTRAINT fk_sup_skincol FOREIGN KEY (skin_colour_id) REFERENCES superhero.colour (id));",
"CREATE TABLE superpower_superhero (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,power_name varchar(200) DEFAULT NULL,CONSTRAINT pk_superpower PRIMARY KEY (id));",
"CREATE TABLE hero_attribute_superhero (hero_id INT DEFAULT NULL,attribute_id INT DEFAULT NULL,attribute_value INT DEFAULT NULL,CONSTRAINT fk_hat_at FOREIGN KEY (attribute_id) REFERENCES superhero.attribute (id),CONSTRAINT fk_hat_hero FOREIGN KEY (hero_id) REFERENCES superhero.superhero (id));",
"CREATE TABLE hero_power_superhero (hero_id INT DEFAULT NULL,power_id INT DEFAULT NULL,CONSTRAINT fk_hpo_hero FOREIGN KEY (hero_id) REFERENCES superhero.superhero (id),CONSTRAINT fk_hpo_po FOREIGN KEY (power_id) REFERENCES superhero.superpower (id));",
"CREATE TABLE country_uni (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,country_name VARCHAR(100) DEFAULT NULL,CONSTRAINT pk_country PRIMARY KEY (id));",
"CREATE TABLE ranking_system_uni (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,system_name VARCHAR(100) DEFAULT NULL,CONSTRAINT pk_rs PRIMARY KEY (id));",
"CREATE TABLE ranking_criteria_uni (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,ranking_system_id INT DEFAULT NULL,criteria_name VARCHAR(200) DEFAULT NULL,CONSTRAINT pk_rc PRIMARY KEY (id),CONSTRAINT fk_rc_rs FOREIGN KEY (ranking_system_id) REFERENCES universities.ranking_system (id));",
"CREATE TABLE university_uni (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,country_id INT DEFAULT NULL,university_name VARCHAR(200) DEFAULT NULL,CONSTRAINT pk_uni PRIMARY KEY (id),CONSTRAINT fk_uni_cnt FOREIGN KEY (country_id) REFERENCES universities.country (id));",
"CREATE TABLE university_year_uni (university_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,year INT DEFAULT NULL,num_students INT DEFAULT NULL,student_staff_ratio DECIMAL(6,2) DEFAULT NULL,pct_international_students INT DEFAULT NULL,pct_female_students INT DEFAULT NULL,CONSTRAINT fk_uy_uni FOREIGN KEY (university_id) REFERENCES universities.university (id));",
"CREATE TABLE university_ranking_year_uni (university_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,ranking_criteria_id INT DEFAULT NULL,year INT DEFAULT NULL,score INT DEFAULT NULL,CONSTRAINT fk_ury_rc FOREIGN KEY (ranking_criteria_id) REFERENCES universities.ranking_criteria (id),CONSTRAINT fk_ury_uni FOREIGN KEY (university_id) REFERENCES universities.university (id));",]

